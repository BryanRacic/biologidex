# Generated by Django 5.2.7 on 2025-10-20 20:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("animals", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalysisJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="Image to be analyzed", upload_to="vision/analysis/%Y/%m/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="Current status of the analysis",
                        max_length=20,
                    ),
                ),
                (
                    "cv_method",
                    models.CharField(
                        choices=[("openai", "OpenAI Vision"), ("fallback", "Fallback CV Service")],
                        default="openai",
                        help_text="CV method used for identification",
                        max_length=20,
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        default="gpt-4o",
                        help_text="Specific model used (e.g., gpt-4o, gpt-5-mini)",
                        max_length=100,
                    ),
                ),
                (
                    "detail_level",
                    models.CharField(
                        default="auto",
                        help_text="Image detail level for vision models",
                        max_length=20,
                    ),
                ),
                (
                    "raw_response",
                    models.JSONField(
                        blank=True, help_text="Raw response from CV service", null=True
                    ),
                ),
                (
                    "parsed_prediction",
                    models.TextField(blank=True, help_text="Parsed prediction text"),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True, help_text="Confidence score (0-1) if available", null=True
                    ),
                ),
                (
                    "cost_usd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Cost of this API call in USD",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "processing_time",
                    models.FloatField(
                        blank=True, help_text="Processing time in seconds", null=True
                    ),
                ),
                (
                    "input_tokens",
                    models.IntegerField(
                        blank=True, help_text="Number of input tokens used", null=True
                    ),
                ),
                (
                    "output_tokens",
                    models.IntegerField(
                        blank=True, help_text="Number of output tokens generated", null=True
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, help_text="Error message if job failed"),
                ),
                (
                    "retry_count",
                    models.IntegerField(default=0, help_text="Number of retry attempts"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "identified_animal",
                    models.ForeignKey(
                        blank=True,
                        help_text="Identified animal (if successfully matched)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="analysis_jobs",
                        to="animals.animal",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who submitted this image",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Analysis Job",
                "verbose_name_plural": "Analysis Jobs",
                "db_table": "analysis_jobs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["user", "status"], name="analysis_jo_user_id_bbf0d0_idx"),
                    models.Index(
                        fields=["status", "created_at"], name="analysis_jo_status_5eec4d_idx"
                    ),
                    models.Index(
                        fields=["identified_animal"], name="analysis_jo_identif_988556_idx"
                    ),
                    models.Index(fields=["created_at"], name="analysis_jo_created_a13f00_idx"),
                ],
            },
        ),
    ]
